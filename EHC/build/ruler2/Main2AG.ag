MODULE {Main2AG} {}
{
import Data.Maybe
import Data.Char
import Data.List
import qualified Data.Set as Set
import qualified Data.Map as Map
import EH.Util.Pretty
import EH.Util.PrettyUtils
import EH.Util.Utils
import Opts
import Common
import LaTeXFmtUtils
import Expr.Utils
import Ty.Utils
import ARule.Utils
import ViewSel.Utils
import Config (cfgStrSel)
import FmGam
import RwExprGam
import ECnstrGam
import AbsSyn.AbsSyn2

}
{
}
{
}
{
}
{
}
INCLUDE "AbsSyn/AbsSyn2AG.ag"
INCLUDE "AbsSyn/CommonAG.ag"
INCLUDE "FmGamAG.ag"
INCLUDE "AS2/Opts.ag"
INCLUDE "AS2/Pretty.ag"
INCLUDE "Expr/AbsSynAG.ag"
INCLUDE "Expr/PrettyPrintAG.ag"
INCLUDE "Expr/SelfAG.ag"
INCLUDE "Expr/FmGamAG.ag"
INCLUDE "ARule/AbsSynAG.ag"
INCLUDE "ARule/PrettyPrintAG.ag"
INCLUDE "ARule/SelfAG.ag"
INCLUDE "ARule/FmGamAG.ag"
WRAPPER AGItf

{
ppAS2 :: Opts -> FmGam Expr -> Decls -> PP_Doc
ppAS2 o g r
  = pp_Syn_AGItf r2
  where r1 = sem_AGItf (AGItf_AGItf r)
        r2 = wrap_AGItf r1
                (Inh_AGItf {opts_Inh_AGItf = o, fmGam_Inh_AGItf = g})
}
