MODULE {ViewSel.PrettyPrint} {ppViewSel, ppViewSels}
{
import EH.Util.Pretty
import EH.Util.Nm
import ViewSel.ViewSel

}
{
}
{
}
{
}
INCLUDE "ViewSel/AbsSynAG.ag"
WRAPPER AGViewSelItf AGViewSelsItf

{
ppViewSel :: ViewSel -> PP_Doc
ppViewSel vs
  = pp_Syn_AGViewSelItf r2
  where r1 = sem_AGViewSelItf (AGViewSelItf_AGItf vs)
        r2 = wrap_AGViewSelItf r1 (Inh_AGViewSelItf)

ppViewSels :: ViewSels -> PP_Doc
ppViewSels vs
  = pp_Syn_AGViewSelsItf r2
  where r1 = sem_AGViewSelsItf (AGViewSelsItf_AGItf vs)
        r2 = wrap_AGViewSelsItf r1 (Inh_AGViewSelsItf)

instance PP ViewSel where
  pp = ppViewSel

}
ATTR AllViewSel AGViewSelItf AGViewSelsItf [ | | pp USE {>-<} {empty} : PP_Doc ]

SEM ViewSel
  | All             lhs     .   pp          =   pp "*"
  | View            lhs     .   pp          =   pp @nm
  | Range           lhs     .   pp          =   @vwFr.pp >#< ".." >#< @vwTo.pp

SEM ViewSels
  | Cons            lhs     .   pp          =   @hd.pp >|< "," >#< @tl.pp
