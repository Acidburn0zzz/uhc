MODULE {EH101.Core.FvS} {cexprFvS}
{
import qualified Data.Set as Set
import qualified Data.Map as Map
import EH101.Base.Common
import EH101.Base.Builtin
import EH101.Core
import EH101.Ty

}
{
}
{
}
INCLUDE "Core/AbsSyn.ag"
INCLUDE "Core/Trf/CommonFv.ag"
INCLUDE "Core/CommonBindNm.ag"
WRAPPER CodeAGItf

{
cexprFvS :: CExpr -> FvS
cexprFvS e
  =  let  t = wrap_CodeAGItf (sem_CodeAGItf (CodeAGItf_AGItf (mkCMod e))) Inh_CodeAGItf
     in   fvS_Syn_CodeAGItf t

}
ATTR CodeAGItf [ | | fvS: FvS ]

