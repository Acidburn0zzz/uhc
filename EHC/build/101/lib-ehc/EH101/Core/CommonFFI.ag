SEM CExpr
  | FFI         loc         .   argTyLresTy     =   tyArrowArgsRes @ty
                            .   argTyL          =   fst @loc.argTyLresTy
                            .   resTy           =   snd @loc.argTyLresTy
                            .   foreignEntInfo  =   foreignEntExtract @impEnt
                loc         .   mbPrimNeedEval  =   maybe Nothing lookupPrimNeedsEval $ forextractMbEnt @foreignEntInfo
                            .   primArgNeedsEvalL
                                                =   maybe (repeat True) (\p -> primArgNeedEval p ++ repeat True) @mbPrimNeedEval
                            .   primResNeedsEval
                                                =   maybe False primResNeedEval @mbPrimNeedEval
                loc         .   argMbConL       =   map tyAppFunMbConNm @argTyL
                            .   resMbCon        =   tyAppFunMbConNm @resTy

                -- AG required types
                loc         .   argTyLresTy     :   {( TyL, Ty )}
                loc         .   argTyL          :   TyL
                loc         .   primResNeedsEval:   Bool
                loc         .   mbPrimNeedEval	:   {Maybe PrimitiveNeedsEval}

SEM CBound
  | FFE         loc         .   argTyLresTy     =   tyArrowArgsRes @ty
                            .   argTyL          =   fst @loc.argTyLresTy
                            .   resTy           =   snd @loc.argTyLresTy
                            .   foreignEntInfo  =   foreignEntExtract @expEnt
                            .   expEntNm        =   forextractEnt @foreignEntInfo

ATTR CExpr [ | | mbFFIApp: {Maybe ( Ty
                                  , Bool
                                  , FFIWay
                                  , ForeignEnt
                                  , [Ty]
                                  )} ]

SEM CExpr
  | FFI         lhs         .   mbFFIApp        =   Just ( @resTy               -- TBD: must be IO adapted still
                                                         , @primResNeedsEval
                                                         , @callconv
                                                         , @impEnt
                                                         , @argTyL              -- TBD: must be IO adapted still
                                                         )
  | App         lhs         .   mbFFIApp        =   @func.mbFFIApp
  | * - FFI Ann App
                lhs         .   mbFFIApp        =   Nothing

