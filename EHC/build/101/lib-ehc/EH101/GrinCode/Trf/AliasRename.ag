MODULE {EH101.GrinCode.Trf.AliasRename} {grAliasRename}
{
import qualified Data.Map as Map
import Data.Maybe
import EH101.Base.Builtin
import EH101.Base.Common
import EH101.GrinCode.Common
import EH101.GrinCode
import qualified EH101.Config as Cfg

}
INCLUDE "GrinCode/AbsSyn.ag"
{
}
{
}
{
}
{
}
INCLUDE "GrinCode/Trf/CommonAliasAG.ag"
INCLUDE "GrinCode/Trf/CommonRenameAG.ag"
{
grAliasRename :: Maybe (HsName -> HsName) -> NmAliasMp -> GrExpr -> GrExpr
grAliasRename mbMkNewNm m e
  = trf_Syn_GrExpr t
  where t = wrap_GrExpr (sem_GrExpr e)
            $ Inh_GrExpr
                { nmAliasMp_Inh_GrExpr = m
                , mkNewNm_Inh_GrExpr = maybe id id mbMkNewNm
                }

}
WRAPPER GrExpr

SEM GrAGItf
  | AGItf		loc			.	mkNewNm			=	id

SEM GrExpr
  | Seq         loc         .   newAliasMp      =   @patAliasMp `Map.union` @lhs.nmAliasMp
                pat         .   nmAliasMp       =   @newAliasMp
                body        .   nmAliasMp       =   @newAliasMp

