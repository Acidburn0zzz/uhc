ATTR AllNT [ | | range USE {`rangeUnion`} {emptyRange} : Range ]

SEM Decl
  | GenerRep FusionConv FusionDecl
         		loc         .   range               =   @hsrange
  | * - GenerRep FusionConv FusionDecl
                loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]

SEM TyExpr
  | Con Var VarWild Impls NoImpls Wild Mono
                loc         .   range               =   @hsrange
  | * - Con Var VarWild Impls NoImpls Wild Mono
                loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]

SEM KiExpr
  | Con Var     loc         .   range               =   @hsrange
  | * - Con Var loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]

SEM TyVar
  | Var         loc         .   range               =   @hsrange
  | * - Var     loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]

SEM RowTyExpr
  | Var Empty   loc         .   range               =   @hsrange
  | * - Var Empty
                loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]

SEM DataFieldExpr DataFieldPatExpr
  | Con         loc         .   range               =   @hsrange
  | * - Con     loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]

SEM RecExpr RecPatExpr
  | Empty       loc         .   range               =   @hsrange
  | * - Empty   loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]

SEM PrExpr CaseAlt DataConstr DataField FuncDep
  | *           loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]

SEM Expr
  | Con Var IConst CConst SConst Undefined CaseAltFail DynVar IIConst
                loc         .   range               =   @hsrange
  | * - Con Var IConst CConst SConst Undefined CaseAltFail DynVar IIConst
                loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]

SEM PatExpr
  | Con Var IConst CConst SConst
                loc         .   range               =   @hsrange
  | * - Con Var IConst CConst SConst
                loc         .   range               =   rangeUnions [@hsrange, @first__.range, @last__.range]


{
type RangeMp = Map.Map Pred [Range]

cnstrMpToRangeMp :: CHRPredOccCnstrMp -> RangeMp
cnstrMpToRangeMp m = Map.unionsWith (++) [ Map.singleton (cpoPr p) [cpoRange p] | (Prove p) <- Map.keys m ]

}
ATTR NTPrf [ | | gathRangeMp USE {`Map.union`} {Map.empty}: RangeMp ]
ATTR NTPrf [ rangeMp: RangeMp | | ]

SEM AGItf
  | AGItf       loc         .   rangeMp             =   Map.unionsWith (++)
                                                        $ map (\(c,r) -> Map.singleton (@expr.tyVarMp `varUpd` c) r)
                                                        $ Map.toList
                                                        $ @expr.gathRangeMp
                                                          `Map.union` cnstrMpToRangeMp @expr.gathCnstrMp

SEM Expr
  | Let         lhs         .   gathRangeMp         =   @decls.gathRangeMp
                                                        `Map.union` cnstrMpToRangeMp @decls.gathCnstrMp
                                                        `Map.union` @body.gathRangeMp

