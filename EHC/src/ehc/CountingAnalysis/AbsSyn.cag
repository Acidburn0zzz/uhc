%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Types
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 counting) ag
DATA AnnPrim 
  | Zero
  | One
  | Infinity

DATA Annotation
  | Var v : {HsName}
  | Val v : AnnotationValue
 
TYPE Annotations = [Annotation]
TYPE Types = [Type]
TYPE RhoTypes = [RhoType]
TYPE Constraints = [Constraint]
TYPE Fields = [Field]

DATA Field
  | Strict t : RhoType
  | Lazy t : RhoType

DATA Type
  | Var v : {HsName}
  | Data n : {HsName} as : Annotations ts : Types
  | App t1 : Type t2 : Type
  | Func t1 : RhoType t2 : EtaType
  | Tup ts : RhoTypes
  | Error e : {String}

DATA Scheme
  | Var v : {HsName}
  | Forall as : {Set HsName} ts : {Set HsName} cs : Constraints t : Type

DATA EtaType
  | Eta t : Type a : Annotation

DATA EtaScheme
  | Eta s : Scheme a : Annotation

DATA RhoType
  | Rho e : EtaType a : Annotation
 
DATA RhoScheme
  | Rho e : EtaScheme a : Annotation

TYPE Env = MAP {HsName} RhoScheme
TYPE AltCons = [AltCon]
TYPE AltConsts = [AltConst]
TYPE ConVars = [ConVar]
TYPE Bindings = [Binding]

TYPE Expr
  | VarLocal v : {HsName}
  | VarImport v : {HsName}
  | Const c : Const
  | Abs bind : {HsName} body : Expr
  | AppLocal func : Expr  arg : {HsName}
  | AppImport func : Expr  arg : {HsName}
  | AppConst func : Expr  arg : Const
  | Let binds : Bindings e : Expr
  | LetBang x : {HsName} e1 : Expr e2 : Expr
  | Con tyNm : {HsName} conNm : {HsName} flds : ConVars
  | Tup flds : ConVars
  | CaseCon e : Expr alts : AltCons
  | CaseTup e : Expr xs : {HsNames} e1 : Expr
  | CaseConst e : Expr alts : AltConsts
  | FFI ty : {Ty}
  | Ann ann : EtaType e : Expr
  | Error e : {String}

DATA ConVar
  | VarLocal v : {HsName}
  | VarImport v : {HsName}
  | Const c : Const

DATA Binding
  | Bind n : {HsName} e : Expr

DATA Const
  | Int c : {Int}
  | Char c : {Char}
  | String c : {String}
  | Integer c : {Integer}

DATA AltCon
  | Alt tyNm : {HsName} conNm : {HsName} xs : {HsNames} e : Expr

DATA AltConst 
  | Int c : {Int} e : Expr
  | Char c : {Char} e : Expr
  
DATA Constraint
  | Ann c : ConstraintAnn
  | Eq c : ConstraintEq
  | Inst s : Scheme t : Type
  | Gen t : Type u : Annotation d : Annotation v0: Annotation d0: Annotation c : Constraints e : Env s : Scheme

DATA ConstraintAnn
  | Plus a1 : Annotation a2 : Annotation a : Annotation
  | Union a1 : Annotation a2 : Annotation a : Annotation
  | Times a1 : Annotation a2 : Annotation a : Annotation
  | Cond a1 : Annotation a2 : Annotation a : Annotation

DATA ConstraintEq
  | Ann a1 : Annotation a2 : Annotation
  | Type t1 : Type t2 : Type
  | Scheme s1 : Scheme s2 : Scheme

DATA Module
  | Module e : Expr
%%]