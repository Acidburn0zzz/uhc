%%[0 lhs2tex
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Check core module when provided as source
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 corerunin) hs module {%{EH}CoreRun.Check}
%%]

%%[(8 corerunin) hs import({%{EH}Base.Common},{%{EH}Opts},{%{EH}Error})
%%]

%%[(8 corerunin) hs import({%{EH}CoreRun})
%%]

%%[(8 corerunin) hs import(qualified UHC.Util.Rel as Rel, qualified UHC.Util.RelMap as RelMap)
%%]

%%[(50 corerunin) hs import(qualified {%{EH}Module.ImportExport} as ModImpExp)
%%]

%%[(8 corerunin).WRAPPER ag import({CoreRun/AbsSyn})
WRAPPER AGItf
%%]

%%[(8 corerunin) hs
deriving instance Typeable Syn_AGItf
%%]

%%[(99 corerunin)
-- Enforce laziness as invocation assumes this...
-- PRAGMA nocycle
-- PRAGMA nostrictwrap
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Haskell itf
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 corerunin) hs export(crmodCheck', Inh_AGItf(..), Syn_AGItf(..))
crmodCheck'
  :: Inh_AGItf
     -> Mod
     -> Syn_AGItf
crmodCheck' inh crmod
  = t
  where t = wrap_AGItf
              (sem_AGItf (AGItf_AGItf crmod))
              inh

%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Global info
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 corerunin)
ATTR
  AGItf Mod AllExport
    [ moduleNr: Int
    | | ]
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Export info: name to ref map
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 corerunin)
ATTR AGItf Mod AllExport [ | | nm2ref USE {`nm2refUnion`} {emptyNm2RefMp} : Nm2RefMp ]

SEM Export
  | Export		lhs			.   nm2ref				=   RelMap.singleton @nm (RRef_Imp @lhs.moduleNr @offset) -- (RRef_Exp @lhs.moduleNm @offset)
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Replica
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 corerunin)
ATTR AllNT [ | | crr: SELF ]
ATTR AGItf [ | | crr: Mod ]

SEM Mod
  | Mod			lhs			.	crr					=	@crr {moduleNr_Mod_Mod = @lhs.moduleNr}
%%]
